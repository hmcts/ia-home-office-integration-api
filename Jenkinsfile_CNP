#!groovy
properties([
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ia-home-office-integration-api.git'],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
])


@Library("Infrastructure")

def type = "java"
def product = "ia"
def component = "home-office-integration-api"

def secrets = [
    'ia-${env}': [

        secret('idam-url', 'IDAM_URL'),
        secret('s2s-url', 'S2S_URL'),

        secret('idam-client-id', 'IA_IDAM_CLIENT_ID'),
        secret('idam-secret', 'IA_IDAM_SECRET'),
        secret('s2s-secret', 'IA_S2S_SECRET'),
        secret('s2s-microservice', 'IA_S2S_MICROSERVICE'),

        secret('test-law-firm-a-username', 'TEST_LAW_FIRM_A_USERNAME'),
        secret('test-law-firm-a-password', 'TEST_LAW_FIRM_A_PASSWORD')

    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withPipeline(type, product, component) {

    env.IA_IDAM_REDIRECT_URI = "https://ia-case-api-aat.service.core-compute-aat.internal/oauth2/callback"
    env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
    env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.HOME_OFFICE_ENDPOINT = "http://ia-home-office-mock-api-aat.service.core-compute-aat.internal"
    env.HOME_OFFICE_CASE_SEARCH_URI = "/v1/applicationStatus/getBySearchParameters"
    env.HOME_OFFICE_INSTRUCT_URI = "/v1/applicationInstruct/setInstruct"

    enableAksStagingDeployment()
    disableLegacyDeployment()
    loadVaultSecrets(secrets)

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    enableSlackNotifications('#ia-tech')
}
